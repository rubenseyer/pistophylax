start: [(_LF* statement)*] _LF*
?statement: proof | axiom | include
include: "include" ESCAPED_STRING

proof: "prove" [identifier "."] sequent _LF+ (line+) "qed"
sequent: [wff ("," wff)*] _TURNSTILE wff
axiom: "axiom" identifier "." rule
rule: [(wff|box) ("," (wff|box))*] _TURNSTILE wff
box: "[" wff "..."? wff "]"
_TURNSTILE . 3: "|-"|"⊢"

?line: deduction | assumption
deduction: wff [tag] ":" justification _LF+
assumption: "assume" [tag] _LF+ [line+] "end" _LF+
justification: ("pr" | "premise") -> premisejustification
             | ("as" | "assumption") -> assumptionjustification
             | ("copy" ref) -> copyjustification
             | (identifier [ref*])

?wff: wff1 _IMPLIES wff -> _implies
    | wff1
?wff1: wff2 _OR wff2   -> _or
     | wff2 _AND wff2  -> _and
     | wff2
?wff2: _NOT wff2       -> _not
     | _FALSUM         -> _falsum
     | atom
     | "(" wff ")"
_NOT . 2: "~"|"!"|"¬"
_AND . 2: "^"|"&"|"∧"
_OR . 2:  "v"|"|"|"∨"
_IMPLIES . 2: "->"|">"|"→"|"⇒"
_FALSUM . 2: "#"|"⊥"
atom: UCASE_LETTER

tag: "@" identifier
ref: "[" lineref "]" -> blockref
   | lineref
?lineref: INT
     | ".." -> last
     | "..." -> lastlast
     | tag
symbol: _NOT     -> symnot
      | _AND     -> symand
      | _OR      -> symor
      | _IMPLIES -> symimplies
      | _FALSUM  -> symfalsum
identifier: symbol? NAME

NAME: ("_" | LETTER) ("_" | LETTER | DIGIT)*
COMMENT: /\/\/.*/
%import common (LETTER, DIGIT, UCASE_LETTER, INT, SIGNED_INT, ESCAPED_STRING, WS_INLINE)
%import common.NEWLINE -> _LF
%ignore WS_INLINE
%ignore COMMENT
